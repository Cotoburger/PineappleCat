from telethon.sync import TelegramClient
from telethon.tl.functions.messages import GetHistoryRequest
import re
import json
from dotenv import load_dotenv
import os
from datetime import datetime, timedelta

load_dotenv()  # –ó–∞–≥—Ä—É–∑–∏—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env —Ñ–∞–π–ª–∞

# Telegram API
api_id = int(os.getenv("TELEGRAM_API_ID"))
api_hash = os.getenv("TELEGRAM_API_HASH")
channel_username = os.getenv("TELEGRAM_CHANNEL_USERNAME")

# Discord
DISCORD_CHANNEL_ID = 1341736506804539393
MAG_THRESHOLD = 4.0

# –§–∞–π–ª –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è ID –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
LAST_ID_FILE = "last_telegram_id.json"

def extract_info(message):
    time_match = re.search(r"–í—Ä–µ–º—è UTC:\s*(.+)", message)
    coords_match = re.search(r"–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã:\s*([0-9\., ]+)", message)
    dist_match = re.search(r"–†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –æ—Ç –ü–ö:\s*(\d+)", message)
    depth_match = re.search(r"–ì–ª—É–±–∏–Ω–∞ \(–ö–ú\):\s*([0-9.]+)", message)
    mag_match = re.search(r"–ú–∞–≥–Ω–∏—Ç—É–¥–∞:\s*([0-9.]+)", message)
    intensity_match = re.search(r"–ò–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ—Å—Ç—å –≤ –ü–ö.*:\s*(\d+)", message)

    # –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ UTC –≤ UTC+12
    if time_match:
        try:
            utc_time_str = time_match.group(1).strip()
            dt = datetime.strptime(utc_time_str, "%d %b %Y  %H:%M:%S")
            dt_local = dt + timedelta(hours=12)
            local_time_str = dt_local.strftime("%d %b %Y %H:%M:%S")
        except Exception:
            local_time_str = "‚Äî"
    else:
        local_time_str = "‚Äî"

    coords = coords_match.group(1).strip() if coords_match else "‚Äî"
    dist = dist_match.group(1) if dist_match else "‚Äî"
    depth = depth_match.group(1) if depth_match else "‚Äî"
    mag = float(mag_match.group(1)) if mag_match else None
    intensity = intensity_match.group(1) if intensity_match else None

    return local_time_str, coords, dist, depth, mag, intensity

def load_last_message_id():
    if os.path.exists(LAST_ID_FILE):
        with open(LAST_ID_FILE, "r", encoding="utf-8") as f:
            try:
                return json.load(f).get("last_id", 0)
            except json.JSONDecodeError:
                return 0
    return 0

def save_last_message_id(message_id):
    with open(LAST_ID_FILE, "w", encoding="utf-8") as f:
        json.dump({"last_id": message_id}, f, indent=2)

async def check_earthquakes(discord_bot):
    try:
        async with TelegramClient('eqk_monitor', api_id, api_hash) as client:
            result = await client(GetHistoryRequest(
                peer=channel_username,
                limit=1,
                offset_date=None,
                offset_id=0,
                max_id=0,
                min_id=0,
                add_offset=0,
                hash=0
            ))

            if result.messages:
                message_obj = result.messages[0]
                message_id = message_obj.id
                msg_text = getattr(message_obj, "message", "") or ""

                last_id = load_last_message_id()
                if message_id <= last_id:
                    return  # –£–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º

                time_str, coords, dist, depth, mag, intensity = extract_info(msg_text)

                if mag and mag >= MAG_THRESHOLD:
                    channel = discord_bot.get_channel(DISCORD_CHANNEL_ID)
                    if channel:
                        formatted = (
                            f"‚ÄºÔ∏è **–ó–µ–º–ª–µ—Ç—Ä—è—Å–µ–Ω–∏–µ!**\n"
                            f"üïí –í—Ä–µ–º—è (UTC+12): {time_str}\n"
                            f"üìç –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã: {coords}\n"
                            f"üìè –†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –æ—Ç –ü–ö: {dist} –∫–º\n"
                            f"üåã –ì–ª—É–±–∏–Ω–∞: {depth} –∫–º\n"
                            f"üí• –ú–∞–≥–Ω–∏—Ç—É–¥–∞: {mag}"
                        )
                        if intensity:
                            formatted += f"\nüìä –ò–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ—Å—Ç—å (–ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–∞—è): {intensity}"
                        await channel.send(formatted)
                    else:
                        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ Discord-–∫–∞–Ω–∞–ª")
                else:
                    print(f"[DEBUG] –ú–∞–≥–Ω–∏—Ç—É–¥–∞ {mag} –Ω–∏–∂–µ –ø–æ—Ä–æ–≥–∞ {MAG_THRESHOLD}")

                save_last_message_id(message_id)
            else:
                print("‚ùå –°–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram-–∫–∞–Ω–∞–ª–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")

    except Exception as e:
        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –≤ check_earthquakes: {e}")
